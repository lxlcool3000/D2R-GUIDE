name: Auto-tag and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  autotag:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Detect version change
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          CURR_VER=$(node -p "require('./package.json').version")
          git show HEAD^:package.json > prev.json 2>/dev/null || echo '{}' > prev.json
          PREV_VER=$(node -p "(function(){try{return require('./prev.json').version||''}catch(e){return ''}})()")
          echo "Current: $CURR_VER | Previous: $PREV_VER"
          echo "curr_version=$CURR_VER" >> $GITHUB_OUTPUT
          if [ "$CURR_VER" != "$PREV_VER" ] && [ -n "$CURR_VER" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          if [ -f CHANGELOG.md ] && grep -qE "^## v${CURR_VER}\b" CHANGELOG.md; then
            echo "has_changelog=true" >> $GITHUB_OUTPUT
          else
            echo "has_changelog=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.detect.outputs.changed == 'true' && steps.detect.outputs.has_changelog == 'true'
        shell: bash
        env:
          VER: ${{ steps.detect.outputs.curr_version }}
        run: |
          set -euo pipefail
          TAG="v${VER}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; skipping."
            exit 0
          fi
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a "$TAG" -m "release: $TAG"
          git push origin "$TAG"

      - name: Warn if CHANGELOG missing section
        if: steps.detect.outputs.changed == 'true' && steps.detect.outputs.has_changelog != 'true'
        run: |
          echo "::warning title=CHANGELOG missing::Version ${{ steps.detect.outputs.curr_version }} not found in CHANGELOG.md (expected '## v${{ steps.detect.outputs.curr_version }}'). Skipping tag creation."

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare release notes from CHANGELOG
        id: notes
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [ -f CHANGELOG.md ]; then
            awk -v tag="## ${TAG}" 'BEGIN{p=0} \
              /^## v[0-9]/{ if(p){ exit } } \
              { if($0 ~ tag){ p=1 } if(p){ print } }' CHANGELOG.md > RELEASE_NOTES.md || true
          fi
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "${TAG}" > RELEASE_NOTES.md
            echo >> RELEASE_NOTES.md
            echo "Auto-generated release for ${TAG}." >> RELEASE_NOTES.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

